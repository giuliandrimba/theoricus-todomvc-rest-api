// Generated by CoffeeScript 1.6.3
(function() {
  var BSON, Database, Todos, mongo,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Database = require("../database/database");

  mongo = require("mongodb");

  BSON = mongo.BSONPure;

  Todos = (function() {
    Todos.prototype.name = "todos";

    function Todos() {
      this["delete"] = __bind(this["delete"], this);
      this.update = __bind(this.update, this);
      this.create = __bind(this.create, this);
      this.read = __bind(this.read, this);
      this.all = __bind(this.all, this);
      this.db = new Database(this.name);
    }

    Todos.prototype.all = function(req, res) {
      var _this = this;
      return this.db.all(function(result) {
        return res.send(result);
      });
    };

    Todos.prototype.read = function(req, res) {
      var id,
        _this = this;
      id = req.params.id;
      console.log("Retrieving todo " + id);
      return this.db.collection(this.name, function(err, collection) {
        if (!err) {
          return collection.findOne({
            "_id": new BSON.ObjectID(id)
          }, function(err, item) {
            if (!err) {
              return res.send(item);
            } else {
              console.log("Error retrieving todo " + id);
              return console.log(err);
            }
          });
        } else {
          console.log("Couldn't access " + _this.name + " collection");
          return console.log(err);
        }
      });
    };

    Todos.prototype.create = function(req, res) {
      var todo,
        _this = this;
      todo = req.body;
      return this.db.collection(this.name, function(err, collection) {
        if (!err) {
          return collection.insert(todo, {
            safe: false
          }, function(err, result) {
            if (!err) {
              console.log("Success: " + (JSON.stringify(result[0])));
              return res.send(result[0]);
            } else {
              return res.send({
                "error": "An error has ocurred"
              });
            }
          });
        } else {
          return console.log("Error adding a todo: " + err);
        }
      });
    };

    Todos.prototype.update = function(req, res) {
      var id, todo,
        _this = this;
      id = req.params.id;
      todo = req.body;
      console.log("Updating todo " + id);
      console.log(JSON.stringify(todo));
      return this.db.collection(this.name, function(err, collection) {
        if (!err) {
          return collection.update({
            "_id": new BSON.ObjectID(id)
          }, todo, {
            safe: false
          }, function(err, result) {
            if (!err) {
              console.log("" + result + " document(s) updated");
              return res.send(todo);
            } else {
              console.log("Error updating todo " + err);
              return res.send({
                "error": "Error updating todo"
              });
            }
          });
        } else {
          console.log("Couldn't access " + _this.name + " collection");
          return console.log(err);
        }
      });
    };

    Todos.prototype["delete"] = function(req, res) {
      var id,
        _this = this;
      id = req.params.id;
      console.log("Deleting todo " + id);
      return this.db.collection(this.name, function(err, collection) {
        if (!err) {
          return collection.remove({
            "_id": new BSON.ObjectID(id)
          }, {
            safe: false
          }, function(err, result) {
            if (!err) {
              console.log("" + result + " document(s) deleted");
              return res.send(req.body);
            } else {
              console.log("Error deleting todo " + id);
              return res.send({
                "error": "Couldn't delete todo " + id
              });
            }
          });
        } else {
          console.log("Couldn't access " + _this.name + " collection");
          return console.log(err);
        }
      });
    };

    return Todos;

  })();

  module.exports = new Todos;

}).call(this);
